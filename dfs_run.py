from dfs import dfs
from graph_class import Graph
from check_connected_dfs import find_all_group, check_connected_num_dfs

G1 = Graph(13)
print(G1.nodes)
print(G1.adj_of_node)
G1.build_undirected_edge(0,1)
G1.build_undirected_edge(0,9)
G1.build_undirected_edge(1,0)
G1.build_undirected_edge(1,8)
G1.build_undirected_edge(2,3)
G1.build_undirected_edge(3,2)
G1.build_undirected_edge(3,4)
G1.build_undirected_edge(3,5)
G1.build_undirected_edge(3,7)
G1.build_undirected_edge(4,3)
G1.build_undirected_edge(5,3)
G1.build_undirected_edge(5,6)
G1.build_undirected_edge(6,5)
G1.build_undirected_edge(6,7)
G1.build_undirected_edge(7,3)
G1.build_undirected_edge(7,8)
G1.build_undirected_edge(7,10)
G1.build_undirected_edge(7,11)
G1.build_undirected_edge(8,1)
G1.build_undirected_edge(8,7)
G1.build_undirected_edge(8,9)
G1.build_undirected_edge(9,0)
G1.build_undirected_edge(9,8)
G1.build_undirected_edge(10,7)
G1.build_undirected_edge(10,11)
G1.build_undirected_edge(11,7)
G1.build_undirected_edge(11,10)
print(G1.adj_of_node)
#dfs(G1, 0)
print('correct dfs = ' + str(dfs(G1, 0)))
print(G1.nodes_num)
print(find_all_group(G1, G1.nodes_num))

G2 = Graph(18)
G2.build_undirected_edge(5,1)
G2.build_undirected_edge(5,17)
G2.build_undirected_edge(5,16)
G2.build_undirected_edge(0,4)
G2.build_undirected_edge(0,8)
G2.build_undirected_edge(0,14)
G2.build_undirected_edge(0,13)
G2.build_undirected_edge(15,9)
G2.build_undirected_edge(15,2)
G2.build_undirected_edge(15,10)
G2.build_undirected_edge(3,9)
G2.build_undirected_edge(6,7)
G2.build_undirected_edge(6,11)
#print(find_all_group(G2, G2.nodes_num))
print(check_connected_num_dfs(G2, 5))
